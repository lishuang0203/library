<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
  <display-name>Archetype Created Web Application</display-name>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring/spring-*.xml</param-value>
  </context-param>
  <!-- 监听器: 创建spring框架的IOC容器
               将IOC容器对象存放到application域中
               ApplicationContext ioc = WebApplicationContextUtils.getWebApplicationContext(application)

               ContextLoaderListener extends ContextLoader implements ServletContextListener
               ServletContextListener监听器接口:
                  监听ServletContext创建和销毁
                      如果监听到ServletContext创建(服务器启动) ，就会创建IOC容器。
                      如果监听到ServletContext销毁(服务器停止或卸载项目) ，就会销毁IOC容器。
   -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--  -->
  <listener>
    <listener-class>com.wdd.library.listener.StartSystemListener</listener-class>
  </listener>

  <!-- 字符编码过滤器 -->
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>/*</url-pattern>
    <!--
      <dispatcher>REQUEST</dispatcher>
    -->
  </filter-mapping>


  <!--支持RESTful风格，将POST请求转换为PUT或DELETE请求
      会读取隐含参数  "_method "
  -->
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <servlet-name>springmvc</servlet-name>
  </filter-mapping>

  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/springmvc-context.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>

    <!--扩展匹配  访问静态资源时可以滤过DispatcherServlet-->
    <url-pattern>*.htm</url-pattern>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>

  <!-- 会话超时时间 -->
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
